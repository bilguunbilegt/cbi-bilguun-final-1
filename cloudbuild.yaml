steps:
# Steps to pull a docker image for pgadmin, push it to container registry and deploy it to cloud run.
- name: "gcr.io/cloud-builders/docker"
  args: ['pull', 'dpage/pgadmin4']
- name: "gcr.io/cloud-builders/docker"
  args: ['tag', 'dpage/pgadmin4','gcr.io/bilguun3/pg-admin']
- name: "gcr.io/cloud-builders/docker"
  args: ['push', 'gcr.io/bilguun3/pg-admin']
  
- name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  entrypoint: gcloud
  args: ['run', 'deploy','pg-admin', '--image','gcr.io/bilguun3/pg-admin', '--region','us-central1', '--add-cloudsql-instances', 'bilguun3:us-central1:mypostgres','--platform','managed', '--port','80', '--allow-unauthenticated','--set-env-vars','PGADMIN_DEFAULT_EMAIL=user@gmail.com','--set-env-vars','PGADMIN_DEFAULT_PASSWORD=SuperSecret']
  
# Steps to build a docker image for go-services, push it to container registry and deploy it to cloud run.  
- name: "gcr.io/cloud-builders/docker"
  args: ['build', '-t', 'gcr.io/bilguun3/go-services','.']
- name: "gcr.io/cloud-builders/docker"
  args: ['push', 'gcr.io/bilguun3/go-services']
  
- name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  entrypoint: gcloud
  args: ['run', 'deploy','go-services', '--image','gcr.io/bilguun3/go-services', '--region','us-central1', '--add-cloudsql-instances', 'bilguun3:us-central1:mypostgres','--platform','managed', '--port','8080', '--allow-unauthenticated']

# Steps to build a docker image for python-services, push it to container registry and deploy it to cloud run.  
- name: "gcr.io/cloud-builders/docker"
  args: ['build', '-t', 'gcr.io/bilguun3/python-services','.']
- name: "gcr.io/cloud-builders/docker"
  args: ['push', 'gcr.io/bilguun3/python-services']
  
- name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  entrypoint: gcloud
  args: ['run', 'deploy','python-services', '--image','gcr.io/bilguun3/python-services', '--region','us-central1', '--add-cloudsql-instances', 'bilguun3:us-central1:mypostgres','--platform','managed', '--port','8000', '--allow-unauthenticated']


options:
  logging: CLOUD_LOGGING_ONLY

images:
- gcr.io/bilguun3/go-services
- gcr.io/bilguun3/pg-admin
- gcr.io/bilguun3/python-services


# steps:
#   # Steps to pull a docker image for pgadmin, push it to container registry and deploy it to cloud run.
#   - name: "gcr.io/cloud-builders/docker"
#     args: ['pull', 'dpage/pgadmin4']
#   - name: "gcr.io/cloud-builders/docker"
#     args: ['tag', 'dpage/pgadmin4','gcr.io/bilguun3/pg-admin-services']
#   - name: "gcr.io/cloud-builders/docker"
#     args: ['push', 'gcr.io/bilguun3/pg-admin-services']
#   # Step to deploy pgAdmin to Cloud Run
#   - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
#     entrypoint: gcloud  
#     args:
#       [
#         'run', 'deploy', 'pg-admin-services',
#         '--image', 'gcr.io/bilguun3/pg-admin-services',
#         '--region', 'us-central1',
#         '--add-cloudsql-instances', 'bilguun3:us-central1:mypostgres',
#         '--platform', 'managed',
#         '--port', '80',
#         '--allow-unauthenticated',
#         '--set-env-vars', 'PGADMIN_DEFAULT_EMAIL=user@gmail.com',
#         '--set-env-vars', 'PGADMIN_DEFAULT_PASSWORD=SuperSecret'
#       ]

#   # Step to build and push the Go service
#   - name: "gcr.io/cloud-builders/docker"
#     args: ['build', '-t', 'gcr.io/bilguun3/go-services', '-f', 'go-services/Dockerfile', 'go-services']
#   - name: "gcr.io/cloud-builders/docker"
#     args: ['push', 'gcr.io/bilguun3/go-services']
  
#   # Step to deploy the Go service to Cloud Run
#   - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
#     entrypoint: gcloud
#     args:
#       [
#         'run', 'deploy', 'go-services',
#         '--image', 'gcr.io/bilguun3/go-services',
#         '--region', 'us-central1',
#         '--add-cloudsql-instances', 'bilguun3:us-central1:mypostgres',
#         '--platform', 'managed',
#         '--port', '8080',
#         '--allow-unauthenticated'
#       ]

#   # Step to build and push the Python service
#   - name: "gcr.io/cloud-builders/docker"
#     args: ['build', '-t', 'gcr.io/bilguun3/python-services', '-f', 'python-services/Dockerfile', 'python-services']
#   - name: "gcr.io/cloud-builders/docker"
#     args: ['push', 'gcr.io/bilguun3/python-services']

#   # Step to deploy the Python service to Cloud Run
#   - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
#     entrypoint: gcloud
#     args:
#       [
#         'run', 'deploy', 'services', 'add-iam-policy-binding', 'python-services',
#         '--image', 'gcr.io/bilguun3/python-services',
#         '--region', 'us-central1',
#         '--add-cloudsql-instances', 'bilguun3:us-central1:mypostgres',
#         '--platform', 'managed',
#         '--port', '8020',
#         '--timeout', '1000s',
#         '--allow-unauthenticated'
#       ]

# options:
#   logging: CLOUD_LOGGING_ONLY

# images:
#   - gcr.io/bilguun3/go-services
#   - gcr.io/bilguun3/python-services
#   - gcr.io/bilguun3/pg-admin-services
